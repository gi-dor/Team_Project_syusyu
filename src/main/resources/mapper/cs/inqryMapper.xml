<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.teamProject.syusyu.InqryMapper">
    <select id="select" parameterType="int" resultType="InqryDTO">
        select INQRY_NO,
               INQRY_TP,
               TITLE,
               CONTENT,
               ATCH_FILE,
               INQRY_YN,
               ANS_CN,
               ANSR_ID,
               ANS_DTTM,
               ORD_DTL_NO,
               EMAIL,
               MP_NO,
               REG_DTTM,
               REGR_ID,
               UPD_DTTM,
               UPDR_ID
        from inqry
        where INQRY_NO = #{INQRY_NO}
        order by REG_DTTM DESC
    </select>

    <select id="selectPage" parameterType="map" resultType="InqryDTO">
        select INQRY_NO,
               INQRY_TP,
               TITLE,
               CONTENT,
               ATCH_FILE,
               INQRY_YN,
               ANS_CN,
               ANSR_ID,
               ANS_DTTM,
               ORD_DTL_NO,
               EMAIL,
               MP_NO,
               REG_DTTM,
               REGR_ID,
               UPD_DTTM,
               UPDR_ID
        from inqry
        order by INQRY_NO DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <insert id="insert" parameterType="InqryDTO">
        INSERT INTO inqry
            (INQRY_TP, TITLE, CONTENT, REGR_ID, REG_DTTM)
        VALUES
            (#{inqryTp}, #{title}, #{content}, #{regrId},#{regDttm})
    </insert>

    <select id="count" resultType="int">
        SELECT count(*) FROM inqry
    </select>

    <select id="content" resultType="String">
        SELECT CONTENT FROM inqry WHERE INQRY_NO = #{inqryno}
    </select>

<!--    <delete id="deleteAll">-->
<!--        DELETE FROM inqry-->
<!--    </delete>-->

    <update id="update" parameterType="InqryDTO">
        UPDATE inqry
        SET INQRY_TP = #{inqryTp},
            TITLE = #{title},
            CONTENT = #{content},
            UPD_DTTM = NOW(),
            INQRY_YN = <choose>
                            <when test="ansCn != null">
                                #{ansCn}
                            </when>
                            <otherwise>
                                'N'
                            </otherwise>
                        </choose>
        WHERE INQRY_NO = #{inqryNo}
    </update>

    <update id="updateAnswer" parameterType="InqryDTO">
        UPDATE inqry
        SET ANS_CN = #{ansCn},
            INQRY_YN = #{inqryYn}
        WHERE INQRY_NO = #{inqryNo}
    </update>



    <delete id="delete" parameterType="map">
        DELETE FROM inqry WHERE INQRY_NO = #{inqryNo} and REGR_ID = #{regrId}
    </delete>

    <select id="selectAll" resultType="InqryDTO">
        SELECT inqryNo, title, content, regrId, regDttm, ansCn
        FROM inqry
        ORDER BY reg_date DESC, inqryNo DESC
    </select>

    <!--    검색에 쓰이고 조건별로 사용할 동적쿼리 제목 , 글번호 , 제목+내용 -->
    <sql id="searchCondition">
        <choose>
            <when test='option=="T"'>
                AND TITLE LIKE CONCAT('%', #{keyword}, '%')
            </when>
            <when test='option=="C"'>
                AND CONTENT LIKE CONCAT('%', #{keyword}, '%')
            </when>
            <when test='option=="N"'>
                AND NOTC_NO LIKE CONCAT('%', #{keyword}, '%')
            </when>
            <otherwise>
                AND (TITLE LIKE CONCAT('%', #{keyword}, '%')
                OR CONTENT LIKE CONCAT('%', #{keyword}, '%'))
            </otherwise>
        </choose>
    </sql>

<!--    <sql id="selectFromBoard">-->
<!--        SELECT inqryNo, title, content, writer, view_cnt, comment_cnt, reg_date-->
<!--        FROM inqry-->
<!--    </sql>-->

<!--    <update id="updateCommentCnt" parameterType="map">-->
<!--        UPDATE inqry-->
<!--        SET   comment_cnt = comment_cnt + #{cnt}-->
<!--        WHERE bno = #{bno}-->
<!--    </update>-->


</mapper>